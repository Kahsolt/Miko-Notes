软件工程

一.软件过程
1.生命周期
	可行性研究
	需求分析
	软件设计
	编码
	测试
	维护
2.软件过程模型
	瀑布模型：逐步
	快速原型模型：先完成子集
	增量模型：模块化，依次完成各个模块
	螺旋模型=瀑布+快速原型
	喷泉模型：步骤重复迭代，界限不分明
	基于组件开发模型：软件复用，直接拼凑
	统一软件开发过程模型RUP：基于UML的更具可操作性的螺旋
	敏捷模型：小版本号开发迭代快，小文档、轻量级
3.结构化需求分析
	ER图：矩形-实体/椭圆-属性/直线-连接关系
	数据流图DFD：矩形-信息源/圆角矩形-数据加工过程/缺边矩形-数据存储/单箭头线-数据流方向
	状态转换图STD：圆-状态/单箭头线-状态转换方式(线上方加下划线的文字为触发转移的条件，下发文字为转移时的操作)
	数据字典DD：一个“数据项=正则表达式”的数据格式表
4.UML语言
	用例图：小人-操作者/椭圆-用例/线-用户用例连线
		用户用例线	单箭头实线
		用例间关系	包含：写有<<include>>的单箭头虚线，包含者指向被包含者(子过程)
					扩展：写有<<extend>>的单箭头虚线，扩展者指向被扩展者(非主线用例)
		用户间关系	泛化：空心三角形箭头实线，通常是类的继承关系，子用例指向父用例
	类图：类名+属性表+方法表-三层结构的矩形
	对象图：对象名:类名+属性值表-两层结构的矩形
		可见性	+	public
				#	protected
				-	private
				~	package
		关联	三元关系：用菱形符号连接三个类
				受限关系：用于1:n或m:n关系，
				聚集关系：空心菱形箭头，指向集合
				组合关系：实心菱形箭头，指向较大范畴者
				关联类：关系需要用一个类来记录信息时，用虚线连接关联类和原关联线
				*重数：写在连接线两端，1/*/1..*
		泛化	殊相类的更殊相化，空心三角箭头指向较大范畴者
		实现	殊相类的更共相化，空心三角箭头指向较大范畴者
	状态图	实心圆-起点/加点空心圆-终点/圆角矩形-状态/单箭头实线-状态转移方向
	顺序图	以单个用例为基准，操作者、边界对象、消息的时序
	活动图	实心圆-起点/加点空心圆-终点/圆角矩形-操作过程/单箭头实线-操作时序
	协作图	突出子系统之间的上下文关系
	构件图	突出构件之间的依赖关系
	部署图	软硬件物理结构
	包图	对类的再分类组合