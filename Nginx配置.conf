#user  kahsolt;
worker_processes  1;
error_log  logs/error.log  notice;
pid    logs/nginx.pid;

events {
  worker_connections  1024;
}

rtmp {
  server {
    listen 1935;
    chunk_size 4096;

    application live{
      live on;
      hls on; #这个参数把直播服务器改造成实时回放服务器。
      wait_key on; #对视频切片进行保护，这样就不会产生马赛克了。
      hls_path /opt/video/hls; #切片视频文件存放位置。
      hls_fragment 10s;     #每个视频切片的时长。
      hls_playlist_length 60s;  #总共可以回看的事件，这里设置的是1分钟。
      hls_continuous on; #连续模式。
      hls_cleanup on;    #对多余的切片进行删除。
      hls_nested on;     #嵌套模式。
    }
    application acg {
      play /home/kahsolt/Videos/Anime;
    }
  }
}

http {
  include     mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  logs/access.log  main;

  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;

  proxy_buffers   128 4k;
  proxy_temp_path tmp;

  keepalive_timeout  65;
  reset_timedout_connection on;
  server_names_hash_max_size  1024;

  gzip  on;
  gzip_buffers 16 4k;
  gzip_comp_level 5;
  gzip_min_length 1k;
  gzip_types text/plain application/x-javascript application/json;

  limit_conn_zone $binary_remote_addr zone=ips:10m;
  limit_conn_zone $server_name zone=servers:10m;
  limit_req_zone $binary_remote_addr zone=requests:10m rate=1r/s;
  limit_conn_log_level notice;
  limit_req_log_level warn;
  
  #server {
  #  listen 80;
  #  return 444;
  #}

  upstream echo_servers {
    server localhost:5000;
    server localhost:5001;
    server localhost:5002;
    server localhost:5003;	# weight 50 down;
  }
  upstream static_servers {
    server localhost:5200;
    server localhost:5201;
  }
  server {
    listen     8080;
    server_name  localhost;
    charset koi8-r;
    access_log  logs/host.access.log  main;

    #limit_req zone=requests burst=10 nodelay;
    #limit_conn connections 10;
    #limit_conn ips 10;
    #limit_conn severs 1000;

    location / {
      root   html;
      index  index.html index.htm;

      proxy_connect_timeout 5;
      proxy_read_timeout 10;
      proxy_send_timeout 10;
      location /hello {
        rewrite /hello$ / break;
        proxy_pass http://localhost:5100;
      }
      location /echo {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HOST $host;
        
        error_page 500 = @fallback;
        rewrite /echo/(.*)$ /$1 break;
        proxy_pass http://echo_servers;
      }
    }
    location /static {
      error_page 404 = @store;
      autoindex on;
    }
    location @store {
      internal;
      proxy_store on;
      proxy_store_access group:r all:r;
      proxy_pass http://static_servers;
    }
    location @fallback {
      proxy_pass http://localhost:80;
    }
    location /downloads {
      #limit_conn connections 1;
      limit_rate_after 1m;
      limit_rate 500k;
    }
    location /videos/flv {
      flv;
    }
    location /videos/mp4 {
      mp4;
      mp4_buffer_size 1m;
      mp4_max_buffer_size 32m;
    }
    location /stats {
      stub_status on;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    error_page  404        /404.html;
    error_page  500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #  proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #  root       html;
    #  fastcgi_pass   127.0.0.1:9000;
    #  fastcgi_index  index.php;
    #  fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #  include    fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
      deny  all;
    }
  }


  # another virtual host using mix of IP-, name-, and port-based configuration
  #
  #server {
  #  listen     8000;
  #  listen     somename:8080;
  #  server_name  somename  alias  another.alias;

  #  location / {
  #    root   html;
  #    index  index.html index.htm;
  #  }
  #}


  # HTTPS server
  #
  #server {
  #  listen     443 ssl;
  #  server_name  localhost;

  #  ssl_certificate    cert.pem;
  #  ssl_certificate_key  cert.key;

  #  ssl_session_cache  shared:SSL:1m;
  #  ssl_session_timeout  5m;

  #  ssl_ciphers  HIGH:!aNULL:!MD5;
  #  ssl_prefer_server_ciphers  on;

  #  location / {
  #    root   html;
  #    index  index.html index.htm;
  #  }
  #}

}
