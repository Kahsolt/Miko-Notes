# 通用正则表达式

通配符
  .		除\n外任意字符
  \w	数字或字母，相当于[a-zA-Z0-9]
  \W
  \s	空白字符，相当于[\n\r\t\v\f]
  \S
  \d	数字，相当于[0-9]

位置
  ^		行首，即一个\n之后
  $		行末，即一个\n之前
  \b	字与空格边界；括号内时匹配退格键
  \B
  \A	字符串的开头
  \Z	字符串的结尾；如果存在换行符，则只匹配到换行符之前
  \z
  \G	最后一个匹配完成的点

数量修饰符
  ?		零或一个
  +		一或多个，贪婪式(非贪婪*?)
  *		零或多个，贪婪式(非贪婪*?)
  {n}	n个
  {n,}	至少n个
  {n,m}	至少n个，至多m个

操作
  |		或，例如(z|f)ood
  []	组合，内置符号集合，用^前缀表示取反，用-中缀表示范围
  (p)		获取匹配
  (?:p)		非获取匹配，通常用于简化|关系，例如industr(?:y|ies)
  (?=p)		正向肯定预查，例如Windows(?=95|98|NT|2000)
  (?!p)		正向否定预查，例如Windows(?!95|98|NT|2000)
  (?<=p)	反向肯定预查
  (?<!p)	反响否定预查


常用正则表达式
  用户名		/^[a-z0-9_-]{3,16}$/
  密码			/^[a-z0-9_-]{6,18}$/
  十六进制值	/^#?([a-f0-9]{6}|[a-f0-9]{3})$/
  电子邮箱		/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/
				/^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.{1,2}[a-z]+)+$/
  URL			/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/
  IP地址		/((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/
				/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
  HTML标签		/^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$/
  Unicode汉字(utf-16)	/^[\u2E80-\u9FFF]+$/

URI(RFC2396n标准): 使用ruby
  %r|^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]))?(#(.*))?|
